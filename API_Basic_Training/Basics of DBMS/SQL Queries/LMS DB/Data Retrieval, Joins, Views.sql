-- Book Details
SELECT 
	O01F02, O01F03, O01F04
FROM 
	BOO01;
-- Full book details using JOIN    
SELECT 
	O01F02 AS BOOK_NAME, 
    T01F02 AS AUTHOR, 
    O01F04 AS GENRE
FROM 
	BOO01
INNER JOIN AUT01 ON	BOO01.O01F03 = AUT01.T01F01;

#Books Group by Genre
SELECT 
	O01F04 AS Genre, 
	COUNT(*) AS BookCount
FROM 
	BOO01
GROUP BY O01F04;

#Book Group by Author
SELECT 
	T01F02 AS AUTHOR, 
	COUNT(O01F01) AS BOOK_COUNT
FROM 
	BOO01
INNER JOIN AUT01 ON BOO01.O01F03 = AUT01.T01F01
GROUP BY 
	T01F02;

# SUB QUERIES
# Books by JK Rowling
SELECT 
	O01F02
FROM 
	BOO01
WHERE 
	O01F03 = (SELECT T01F01 FROM AUT01 WHERE T01F02 = 'JK Rowling');
    
# Union on Same table (Can be done using OR)    
SELECT O01F02 FROM BOO01 WHERE O01F04 = 'Fiction'
UNION
SELECT O01F02 FROM BOO01 WHERE O01F04 = 'Drama';

# Indexing Book Title
CREATE INDEX idx_O01F02 ON BOO01(O01F02);

# Borrowed Books View
CREATE OR REPLACE VIEW BorrowedBooksView AS
SELECT 
	USE01.E01F02 AS Borrower, 
    BOO01.O01F02 AS BookTitle, 
    BOO02.O02F04 AS BorrowDate, 
    BOO02.O02F05 AS ReturnDate
FROM 
	BOO02
INNER JOIN USE01 ON BOO02.O02F02 = USE01.E01F01
INNER JOIN BOO01 ON BOO02.O02F03 = BOO01.O01F01tra01;

SELECT 
	Borrower,
    BookTitle,
    BorrowDate,
    ReturnDate
FROM 
	BORROWEDBOOKSVIEW;
    
SELECT 
	A01F01,
    A01F02,
    A01F03,
    A01F04
FROM 
	tra01;

#JOINING TRANSACTION WITH USER
SELECT 
	E01F02 AS ACTOR,
	A01F03 AS ACTION,
    A01F04 AS DATE
FROM 
	USE01
INNER JOIN TRA01 ON USE01.E01F01 = TRA01.A01F02;	



